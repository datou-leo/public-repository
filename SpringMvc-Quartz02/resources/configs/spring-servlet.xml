<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"

	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.0.xsd"
		default-lazy-init="true">

	<!-- <context:component-scan base-package="com.maven.controller" /> -->
	<context:component-scan base-package="com.feng.springmvc"/>
	<!-- <mvc:annotation-driven /> -->



	<mvc:resources mapping="/styles/**" location="/styles/" />

	<mvc:resources mapping="/scripts/**" location="/scripts/" />

	<mvc:resources mapping="/images/**" location="/images/" />



	<bean

		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<property name="prefix" value="/WEB-INF/views/" />

		<property name="suffix" value=".jsp" />

	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.qq.com"/>
		<property name="username" value="445121408"/>
		<property name="password" value="lpryaaaulvfqbhee"/>
		<property name="javaMailProperties">
            <props>
                <!--设置是否需要身份验证-->
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
	</bean>
	<bean id="freemarkerConfig" class="freemarker.template.Configuration"/> 
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->  
    <bean id="jobFactory" class="com.feng.springmvc.schedule.factory.JobFactory"/>
    <bean id="scheduler" lazy-init="true" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
    	<!-- <property name="autoStartup" value="false"/> -->
    	<property name="jobFactory" ref="jobFactory"/>
    	<property name="overwriteExistingJobs" value="true"/>
    	<property name="startupDelay" value="30"/>
    	<property name="waitForJobsToCompleteOnShutdown" value="true"/>
    	<property name="configLocation" value="classpath:/configs/quartz.properties"/>
    </bean>   
 
    <!--这个类是用来设置触发时间的， startJobs方法启动调度容器，然后按照上面触发器每隔1s执行所配置的myJob2.doSomething()方法 -->     
    <bean id="quartzManager" class="com.feng.springmvc.config.QuartzManager" lazy-init="false" init-method="init" >  
        <!-- <property name="scheduler" ref="scheduler" />   -->
    </bean>
    
    <bean id="transportClient" class="com.feng.springmvc.config.TransportClientFactoryBean"> 
     	<property name="clusterNodes" value="127.0.0.1:9300"/>
     	<property name="clusterName" value="elasticsearch"/>
     </bean>
     <bean id="transportClientRepository" class="com.feng.springmvc.repository.TransportClientRepository">
     	<constructor-arg ref="transportClient"/>
     </bean>

</beans>