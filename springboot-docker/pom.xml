<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.docker</groupId>
	<artifactId>docker2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>docker2</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<docker.image.prefix>jianbofeng</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
<!--		<finalName>springboot-docker</finalName>-->
		<!--
		<defaultGoal>install</defaultGoal>
		-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <!-- Docker maven plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<!--
					<dockerHost>http://localhost:2375</dockerHost>
					-->
					<dockerDirectory>src/main/docker</dockerDirectory>
					<!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>build-image</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>tag-image</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>tag</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<image>mavendemo:latest</image>-->
<!--							<newName>docker.io/jianbofeng/mavendemo:${project.version}</newName>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>push-image</id>-->
<!--						<phase>deploy</phase>-->
<!--						<goals>-->
<!--							<goal>push</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<imageName>docker.io/jianbofeng/mavendemo:${project.version}</imageName>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
            </plugin>
		</plugins>
	</build>

</project>
